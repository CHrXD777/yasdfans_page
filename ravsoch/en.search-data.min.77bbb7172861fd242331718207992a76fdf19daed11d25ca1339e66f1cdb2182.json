[{"id":0,"href":"/ravsoch/posts/","title":"posts","section":"欢迎","content":""},{"id":1,"href":"/ravsoch/posts/ShadertoyTutorial/","title":"聪明绝顶Shader教程","section":"posts","content":"\rPART1.JUST A CIRCLE\r#\r片段着色器通过输入 像素坐标(fragCoord) 并输出对应像素的 rgba值(fragcolor) 来生成图像 uv的常见操作： 归一化(标准化)：vec2 uv = fragCoord/iResolution.xy; 将屏幕分辨率转化为从0到1的uv坐标 中心化(移动原点)：uv -= 0.5; 将uv坐标的(0, 0)位置移动到屏幕中央 屏幕比例调整：uv.x *= iResolution.x/iResolution.y; 如果屏幕比为1，则对uv坐标的x轴无影响，如果屏幕比大于或小于1,会将uv.x拉伸或压缩，以适应不同的屏幕分辨率 距离场： https://iquilezles.org/articles/distfunctions2d/ 平滑过度函数： T smoothstep(T edge0, T edge1, T x) PART1完整代码\r#\rvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) { // Normalized pixel coordinates (from 0 to 1) vec2 uv = fragCoord/iResolution.xy; // Output to screen uv -= 0.5;//remap to -0.5 to 0.5 uv.x *= iResolution.x/iResolution.y; float d = length(uv); float r =0.3; float c = smoothstep(r+0.1,r,d); fragColor = vec4(vec3(c),1.0); } PART1截图：\rPART2.BUILDING STUFF WITH CIRCLE\r#\r整理出来Circle函数 float Circle(vec2 uv, vec2 p, float r, float blur) { float d = length(uv-p); float c = smoothstep(r+blur,r,d); return c; } 使用circle函数画出脸和眼睛(多个圆相减) float mask = Circle(uv, vec2(0.,0.), .4, .03); mask -= Circle(uv, vec2(-.15,.12), .07, .02); mask -= Circle(uv, vec2(.15,.12), .07, .02); 创建一个颜色，然后与musk取交集 vec3 col = vec3(.5,0.4,.6)*mask; 创建嘴巴，经过标准化处理后加入musk中 float mouth = Circle(uv, vec2(0.,0.), .3, .03); mouth -= Circle(uv, vec2(0.,0.45), .5, .03); mouth = smoothstep(0.,1.,mouth); //标准化，将值置于0到1之间 mask -= mouth; PART2完整代码\r#\rfloat Circle(vec2 uv, vec2 p, float r, float blur) { float d = length(uv-p); float c = smoothstep(r+blur,r,d); return c; } void mainImage( out vec4 fragColor, in vec2 fragCoord ) { // Normalized pixel coordinates (from 0 to 1) vec2 uv = fragCoord/iResolution.xy; // Output to screen uv -= 0.5;//remap to -0.5 to 0.5 uv.x *= iResolution.x/iResolution.y; float mask = Circle(uv, vec2(0.,0.), .4, .03); mask -= Circle(uv, vec2(-.15,.12), .07, .02); mask -= Circle(uv, vec2(.15,.12), .07, .02); float mouth = Circle(uv, vec2(0.,0.), .3, .03); mouth -= Circle(uv, vec2(0.,0.45), .5, .03); mouth = smoothstep(0.,1.,mouth); mask -= mouth; vec3 col = vec3(.5,0.4,.6)*mask; fragColor = vec4(col,1.0); } PART2截图：\r保留所有版权 首次上传：2024年07月04日 最后修改：2024年07月04日 "}]